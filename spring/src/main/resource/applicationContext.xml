<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- Connection 객체 이용한 DB 연결 -->
    <bean id="connectionMaker" class="springbook.user.dao.DConnectionMaker" />
    <!-- <bean id="userDao" class="springbook.user.dao.UserDao">
        <property name="connectionMaker" ref="connectionMaker" />
    </bean> -->

    <!-- dataSource 이용한 DB 연결 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://10.253.32.24:7981/testdb" />
        <property name="username" value="dev" />
        <property name="password" value="1234qwer" />
    </bean>
    <bean id="userDaoDataSource" class="springbook.user.dao.datasource.UserDaoDataSource">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 3장 템플릿 테스트 용  -->
    <bean id="userDaoTemplate" class="springbook.user.dao.template.UserDaoTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 3장 jdbcContext 분리 테스트 용  -->
    <bean id="userDaoJdbcContext" class="springbook.user.dao.jdbccontext.UserDaoJdbcContext">
        <property name="jdbcContext" ref="jdbcContext" />
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="jdbcContext" class="springbook.user.dao.jdbccontext.JdbcContext">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 3장 jdbcTemplate 테스트 용  -->
    <bean id="userDao" class="springbook.user.dao.jdbcTemplate.UserDao">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 6장 AOP -->
    <bean id="userServiceimpl" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>
    <bean id="mailSender" class="springbook.user.service.DummyMailSender">
        <!--<property name="host" value="mail.server.com" />-->
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="transactionAdvice" class="springbook.user.service.proxyFactoryBean.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
        <bean id="userService" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
    <bean id="testUserService" class="springbook.user.service.proxyFactoryBean.UserServiceTest$TestUserService" parent="userService" />
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* *..*ServiceImpl.upgrade*(..))" />
    </aop:config>
</beans>